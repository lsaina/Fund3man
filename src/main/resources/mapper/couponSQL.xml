<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="coupon">

<select id="selectAllCoupon" resultType="coupon">
	select
  		coupon_no as couponNo,
  		coupon_name as couponName,
  		coupon_type as couponType,
  		discount,
  		main_target as mainTarget,
  		sub_target as subTarget,
  		valid_start as validStart,
  		valid_end as validEnd,
  		min_price as minPrice,
  		coupon_status as couponStatus
  	from coupon order by 1 desc

</select>
  
  <select id="selectcouponList" parameterType="map" resultType="coupon">
  
  select * from (select rownum as rnum, m.* from 
  (select
  		coupon_no as couponNo,
  		coupon_name as couponName,
  		coupon_type as couponType,
  		discount,
  		main_target as mainTarget,
  		sub_target as subTarget,
  		valid_start as validStart,
  		valid_end as validEnd,
  		min_price as minPrice,
  		coupon_status as couponStatus
  	from coupon where
  	<choose>
		<when test="type == 0">
			coupon_status = 0
		</when>
		<when test="type == 1">
			coupon_status = 1
		</when>
		<when test="type == 2">
			coupon_status = 2
		</when>
		<otherwise>
			1=1
		</otherwise>
	</choose>
	
	<if test="!keyword.equals('')">
		and lower(coupon_name) like lower('%'||#{keyword}||'%')
	</if>
	order by 1 desc)
	m) where rnum between #{start} and #{end}
  
  
  </select>
  <select id="selectCouponCount" parameterType="map" resultType="int">
  	select count(*) from
	(select
  		coupon_no as couponNo,
  		coupon_name as couponName,
  		coupon_type as couponType,
  		discount,
  		main_target as mainTarget,
  		sub_target as subTarget,
  		valid_start as validStart,
  		valid_end as validEnd,
  		min_price as minPrice,
  		coupon_status as couponStatus
  	from coupon where
  	<choose>
		<when test="type == 0">
			coupon_status = 0
		</when>
		<when test="type == 1">
			coupon_status = 1
		</when>
		<when test="type == 2">
			coupon_status = 2
		</when>
		<otherwise>
			1=1
		</otherwise>
	</choose>
	
	<if test="!keyword.equals('')">
		and lower(coupon_name) like lower('%'||#{keyword}||'%')
	</if>
	)
  
  </select>
  
  <insert id="insertCoupon" parameterType="coupon">
  	insert into coupon values(
  		coupon_seq.nextval,
  		#{couponName},
  		#{couponType},
  		#{discount},
  		#{mainTarget},
  		#{subTarget},
  		#{validStart},
  		#{validEnd},
  		#{minPrice},
  		0
  	)
  	
  </insert>
  <select id="selectOneCoupon" parameterType="int" resultType="coupon">
  	select
  		coupon_no as couponNo,
  		coupon_name as couponName,
  		coupon_type as couponType,
  		discount,
  		main_target as mainTarget,
  		sub_target as subTarget,
  		valid_start as validStart,
  		valid_end as validEnd,
  		min_price as minPrice,
  		coupon_status as couponStatus
  	from coupon where coupon_no=#{couponNo}
  </select>
  <update id="updateCoupon" parameterType="coupon">
  	update coupon set
  		coupon_name = #{couponName},
  		coupon_type = #{couponType},
  		discount = #{discount},
  		main_target = #{mainTarget},
  		sub_target = #{subTarget},
  		valid_start = #{validStart},
  		valid_end = #{validEnd},
  		min_price = #{minPrice},
  		coupon_status = 0
	where coupon_no= #{couponNo}
  </update>
  <delete id="deleteCoupon" parameterType="int">
  	delete from coupon where coupon_no=#{couponNo}
  </delete>
  <update id="expireCoupon" parameterType="string">
  	update coupon set coupon_status = 2 where valid_end=#{todayString}
  </update>
  <update id="expireMemberCoupon" parameterType="string">
  	update member_coupon set coupon_status=1 where valid_end=#{todayString}
  </update>
  <select id="selectValidCoupon" resultType="coupon">
  select
  		coupon_no as couponNo,
  		coupon_name as couponName,
  		coupon_type as couponType,
  		discount,
  		main_target as mainTarget,
  		sub_target as subTarget,
  		valid_start as validStart,
  		valid_end as validEnd,
  		min_price as minPrice,
  		coupon_status as couponStatus
  	from coupon 
  	where  coupon_status = 0
  	order by 1 desc
  	
  </select>
  <select id="searchOneMemberCoupon" parameterType="map" resultType="mc">
  	select
  		mem_coupon_no as memCouponNo,
  		member_no as memberNo,
  		use_date as useDate,
  		coupon_use as couponUse,
  		coupon_status as couponStatus,
  		coupon_no as couponNo,
  		valid_end as validEnd
  	from member_coupon
  	where member_no=#{memberNo} and coupon_no=#{couponNo}
  	
  
  </select>
  <insert id="insertMemberCoupon" parameterType="map">
  	insert into member_coupon values (
  		member_coupon_seq.nextval,
  		#{memberNo},
  		null,
  		0,
  		0,
  		#{couponNo},
  		#{validEnd}
  	)
  </insert>
  <update id="updateCouponStatus" parameterType="int">
  	update coupon set coupon_status=1 where coupon_no=#{couponNo}
  </update>
  
  
  
  
  
  
  
  
  
</mapper>
